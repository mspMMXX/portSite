name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  build-and-push:
    name: Build, Test & Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Check formatting
        run: npm run format:check

      - name: Run Tests
        run: npm run test

      - name: Build assets
        run: npm run build

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Docker Image
        run: |
          IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/portsite:${{ github.sha }}
          docker build -t "$IMAGE" .

      - name: Push Docker Image
        run: |
          IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/portsite:${{ github.sha }}
          docker push "$IMAGE"

  deploy-staging:
    name: Deploy to Staging
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: staging

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Deploy to Staging
        env:
          IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/portsite:${{ github.sha }}
        run: |
          echo "→ pulling image $IMAGE"
          docker pull "$IMAGE"
          docker rm -f portsite-staging || true
          docker run -d \
            --name portsite-staging \
            -p 80:80 \
            "$IMAGE"

  deploy-prod:
    name: Deploy to Production
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: production
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Deploy to Production
        env:
          IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/portsite:${{ github.ref_name }}
        run: |
          echo "→ pulling image $IMAGE"
          docker pull "$IMAGE"
          docker rm -f portsite-prod || true
          docker run -d \
            --name portsite-prod \
            -p 80:80 \
            "$IMAGE"

  pages:
    name: Deploy to GitHub Pages
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .
