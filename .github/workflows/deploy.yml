name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  build-and-push:
    name: Build, Test & Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: |
          echo "::group::Running ESLint"
          npm run lint
          echo "::endgroup::"
        continue-on-error: false

      - name: Check formatting
        run: |
          echo "::group::Checking formatting"
          npm run format:check
          echo "::endgroup::"
        continue-on-error: false

      - name: Run Tests
        run: |
          echo "::group::Running Tests"
          npm run test
          echo "::endgroup::"
        continue-on-error: false

      - name: Build assets
        run: npm run build

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build \
            -t ${{ secrets.DOCKERHUB_USERNAME }}/portsite:${{ github.sha }} \
            .

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/portsite:${{ github.sha }}

  deploy-staging:
    name: Deploy to Staging
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Make deploy script executable
        run: chmod +x scripts/deploy-staging.sh

      - name: Deploy to Staging
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          IMAGE_NAME:         portsite
          IMAGE_TAG:          ${{ github.sha }}
        run: ./scripts/deploy-staging.sh

  deploy-prod:
    name: Deploy to Production
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: production
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Make deploy script executable
        run: chmod +x scripts/deploy-prod.sh

      - name: Deploy to Production
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          IMAGE_NAME:         portsite
          IMAGE_TAG:          ${{ github.ref_name }}
        run: ./scripts/deploy-prod.sh

  pages:
    name: Deploy to GitHub Pages
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .
